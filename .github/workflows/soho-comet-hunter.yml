name: SOHO Comet Hunt

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install opencv-python-headless numpy requests pillow \
                      filterpy scipy imageio imageio-ffmpeg

      # --------------------------------------------------------------
      # 1. REPROCESS OLD REPORTS (adds ai_label)
      # --------------------------------------------------------------
      - name: Reprocess old reports
        env:
          USE_AI_CLASSIFIER: "1"
        run: |
          cat > reprocess_old_reports.py << 'EOF'
          #!/usr/bin/env python3
          import json, os, cv2, numpy as np
          from pathlib import Path
          from detector.ai_classifier import classify_crop_batch

          D = Path("detections")
          for p in sorted(D.glob("candidates_*.json"), reverse=True):
              try:
                  with open(p) as f:
                      data = json.load(f)
              except:
                  continue
              modified = False
              crop_paths = []
              idx_map = {}
              for i, cand in enumerate(data):
                  if cand.get("ai_label"):
                      continue
                  cp = Path(cand.get("crop_path", ""))
                  if not cp.is_absolute():
                      cp = D / cp
                  if cp.exists():
                      crop_paths.append(str(cp))
                      idx_map[len(crop_paths)-1] = i
              if crop_paths:
                  results = classify_crop_batch(crop_paths)
                  for res_idx, res in results.items():
                      if res_idx in idx_map:
                          i = idx_map[res_idx]
                          data[i]["ai_label"] = res["label"]
                          data[i]["ai_score"] = round(res["score"], 3)
                          modified = True
              if modified:
                  backup = p.with_suffix(".json.bak")
                  p.rename(backup)
                  with open(p, "w") as f:
                      json.dump(data, f, indent=2)
          EOF
          python reprocess_old_reports.py

      # --------------------------------------------------------------
      # 2. RUN LIVE DETECTION (AI ON)
      # --------------------------------------------------------------
      - name: Run live detection
        env:
          USE_AI_CLASSIFIER: "1"
          DETECTOR_DEBUG: "1"
        run: |
          python detect_comets.py --hours 6 --step-min 12 --out detections
          echo "frames tree:"; find frames -maxdepth 2 -type f -printf "%P\n" | sort | sed 's/^/  - /'
          echo "detections tree:"; find detections -maxdepth 2 -type f -printf "%P\n" | sort | sed 's/^/  - /'

      # --------------------------------------------------------------
      # 3. COMMIT NEW FILES FIRST
      # --------------------------------------------------------------
      - name: Commit new detections
        id: commit
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain detections)" ]; then
            git add detections
            git commit -m "Auto: new detections + AI labels [$(date -u +'%Y-%m-%dT%H:%M:%SZ')] [skip ci]"
            echo "committed=true" >> $GITHUB_OUTPUT
          else
            echo "committed=false" >> $GITHUB_OUTPUT
          fi

      # --------------------------------------------------------------
      # 7. PURGE DATA OLDER THAN 7 DAYS
      # --------------------------------------------------------------
      - name: Purge old detections (older than 7 days)
        id: purge
        run: |
          set -e

          mapfile -t OLD_FILES < <(find detections -type f -mtime +7 -print)

          if [[ ${#OLD_FILES[@]} -eq 0 ]]; then
            echo "No files older than 7 days â€“ nothing to purge."
            echo "purged=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Removing ${#OLD_FILES[@]} file(s) older than 7 days..."
          printf '  - %s\n' "${OLD_FILES[@]}"

          printf '%s\0' "${OLD_FILES[@]}" | xargs -0 rm -f

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add detections
          git commit -m "Auto-purge: remove detections older than 7 days [$(date -u +'%Y-%m-%dT%H:%M:%SZ')] [skip ci]"

          echo "purged=true" >> $GITHUB_OUTPUT

      # --------------------------------------------------------------
      # 4. PULL REMOTE CHANGES (safe after commit or purge)
      # --------------------------------------------------------------
      - name: Pull latest remote changes
        if: steps.commit.outputs.committed == 'true' || steps.purge.outputs.purged == 'true'
        run: |
          git fetch origin
          git rebase origin/main || (git rebase --abort && exit 1)

      # --------------------------------------------------------------
      # 5. PUSH (safe with force-with-lease)
      # --------------------------------------------------------------
      - name: Push changes
        if: steps.commit.outputs.committed == 'true' || steps.purge.outputs.purged == 'true'
        run: |
          git push origin HEAD:main --force-with-lease

      # --------------------------------------------------------------
      # 6. UPLOAD ARTIFACTS
      # --------------------------------------------------------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: detections-${{ github.run_id }}
          path: |
            detections/**/*.json
            detections/animations/*.mp4
            detections/animations/*.gif
          if-no-files-found: warn
          retention-days: 7
